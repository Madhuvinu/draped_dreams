import{B as c,A,S,E as r,V as l}from"./base-16152d6a.js";class I extends c{async register(e){try{const s=this.validateRegistrationData(e);if(!s.isValid)return{success:!1,message:s.message};const a=new URLSearchParams;Object.keys(e).forEach(n=>{a.append(n,e[n])});const i=`${this.baseUrl}${A.ENDPOINTS.AUTH.REGISTER}`,t=await fetch(i,{method:"POST",headers:A.HEADERS.FORM_DATA,body:a,credentials:"include"});if(!t.ok)return{success:!1,message:`HTTP ${t.status}: ${t.statusText}`};const o=await t.json();return this.handleResponse(o,S.AUTH.REGISTRATION_SUCCESS)}catch(s){return console.error("Registration error:",s),{success:!1,message:r.NETWORK}}}async login(e,s){try{const a=this.validateLoginData(e,s);if(!a.isValid)return{success:!1,message:a.message};const i=new URLSearchParams;i.append("email",e),i.append("password",s);const t=`${this.baseUrl}${A.ENDPOINTS.AUTH.LOGIN}`,n=await(await fetch(t,{method:"POST",headers:A.HEADERS.FORM_DATA,body:i,credentials:"include"})).json();return this.handleResponse(n,S.AUTH.LOGIN_SUCCESS)}catch(a){return console.error("Login error:",a),{success:!1,message:r.NETWORK}}}validateRegistrationData(e){const{first_name:s,last_name:a,email:i,phone:t,password:o,confirm_password:n}=e;return d([s,a,i,t,o,n])?s.length<l.USER.NAME_MIN_LENGTH||a.length<l.USER.NAME_MIN_LENGTH?{isValid:!1,message:"Name must be at least 2 characters"}:l.USER.EMAIL_REGEX.test(i)?t.length<l.USER.PHONE_MIN_LENGTH?{isValid:!1,message:r.VALIDATION.PHONE_INVALID}:o.length<l.USER.PASSWORD_MIN_LENGTH?{isValid:!1,message:r.VALIDATION.PASSWORD_TOO_SHORT}:o!==n?{isValid:!1,message:r.VALIDATION.PASSWORDS_DONT_MATCH}:{isValid:!0}:{isValid:!1,message:r.VALIDATION.EMAIL_INVALID}:{isValid:!1,message:r.VALIDATION.REQUIRED}}validateLoginData(e,s){return!e||!s?{isValid:!1,message:"Email and password are required"}:l.USER.EMAIL_REGEX.test(e)?s.length<l.USER.PASSWORD_MIN_LENGTH?{isValid:!1,message:r.VALIDATION.PASSWORD_TOO_SHORT}:{isValid:!0}:{isValid:!1,message:r.VALIDATION.EMAIL_INVALID}}}function d(E){return E.every(e=>e&&e.toString().trim()!=="")}const N=new I;export{N as a};
