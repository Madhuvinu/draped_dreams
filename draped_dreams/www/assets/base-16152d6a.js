const d=()=>window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"?"development":window.location.hostname==="65.1.189.119"?"production":"development",n={getBaseUrl:()=>"https://65.1.189.119/api/method/draped_dreams.api.auth",getDashboardBaseUrl:()=>{const a=d(),e=window.location.protocol,t=window.location.hostname;return a==="development"?`${e}//${t}:8000`:"https://65.1.189.119"},ENDPOINTS:{AUTH:{REGISTER:".register_user",LOGIN:".login_user"},PRODUCTS:{LIST:".get_products",DETAILS:".get_product_details",CATEGORIES:".get_categories"},DASHBOARD:{STATS:"/api/method/draped_dreams.api.dashboard.get_dashboard_stats",PRODUCTS:"/api/method/draped_dreams.api.dashboard.get_products",CUSTOMERS:"/api/method/draped_dreams.api.dashboard.get_customers",ORDERS:"/api/method/draped_dreams.api.dashboard.get_orders",INVENTORY:"/api/method/draped_dreams.api.dashboard.get_inventory"}},HEADERS:{FORM_DATA:{"Content-Type":"application/x-www-form-urlencoded"},JSON:{"Content-Type":"application/json"}}},E={USER:{NAME_MIN_LENGTH:2,EMAIL_REGEX:/^[^\s@]+@[^\s@]+\.[^\s@]+$/,PHONE_MIN_LENGTH:10,PASSWORD_MIN_LENGTH:8},PRODUCT:{NAME_MIN_LENGTH:3,DESCRIPTION_MIN_LENGTH:10,PRICE_MIN:0,STOCK_MIN:0}},l={NETWORK:"Network error. Please check your connection and try again.",VALIDATION:{REQUIRED:"This field is required",EMAIL_INVALID:"Please enter a valid email address",PASSWORD_TOO_SHORT:"Password must be at least 8 characters",PASSWORDS_DONT_MATCH:"Passwords do not match",PHONE_INVALID:"Please enter a valid phone number"},AUTH:{LOGIN_FAILED:"Invalid email or password",REGISTRATION_FAILED:"Registration failed. Please try again.",EMAIL_EXISTS:"Email already registered",ACCOUNT_INACTIVE:"Account is not active"},PRODUCTS:{FETCH_FAILED:"Failed to fetch products",NOT_FOUND:"Product not found"}},S={AUTH:{REGISTRATION_SUCCESS:"Registration successful! Please login.",LOGIN_SUCCESS:"Login successful"},GENERAL:{SAVE_SUCCESS:"Changes saved successfully",DELETE_SUCCESS:"Item deleted successfully"}},c=()=>{const a=document.cookie.split(";");for(let e of a){const[t,s]=e.trim().split("=");if(t==="csrf_token")return s}return null};class _{constructor(){this.baseUrl=n.getBaseUrl()}async makeRequest(e,t={}){try{const s=c(),r={...n.HEADERS.JSON,...t.headers};s&&(r["X-Frappe-CSRF-Token"]=s);const o=await fetch(e,{...t,headers:r,credentials:"include"});if(!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);return await o.json()}catch(s){throw console.error("API Request Error:",s),s}}handleResponse(e,t="Operation successful"){var s;return e.message&&e.message.success?{success:!0,message:e.message.message||t,data:e.message.data}:{success:!1,message:((s=e.message)==null?void 0:s.message)||"Operation failed"}}}export{n as A,_ as B,l as E,S,E as V};
